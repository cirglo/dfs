// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: nameserver.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Permission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Execute       bool                   `protobuf:"varint,1,opt,name=execute,proto3" json:"execute,omitempty"`
	Read          bool                   `protobuf:"varint,2,opt,name=read,proto3" json:"read,omitempty"`
	Write         bool                   `protobuf:"varint,3,opt,name=write,proto3" json:"write,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_nameserver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{0}
}

func (x *Permission) GetExecute() bool {
	if x != nil {
		return x.Execute
	}
	return false
}

func (x *Permission) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

func (x *Permission) GetWrite() bool {
	if x != nil {
		return x.Write
	}
	return false
}

type Permissions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         *Permission            `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Group         *Permission            `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Other         *Permission            `protobuf:"bytes,3,opt,name=other,proto3" json:"other,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permissions) Reset() {
	*x = Permissions{}
	mi := &file_nameserver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions) ProtoMessage() {}

func (x *Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions.ProtoReflect.Descriptor instead.
func (*Permissions) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{1}
}

func (x *Permissions) GetOwner() *Permission {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Permissions) GetGroup() *Permission {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Permissions) GetOther() *Permission {
	if x != nil {
		return x.Other
	}
	return nil
}

type DirEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	IsDir         bool                   `protobuf:"varint,3,opt,name=isDir,proto3" json:"isDir,omitempty"`
	Permissions   *Permissions           `protobuf:"bytes,4,opt,name=permissions,proto3" json:"permissions,omitempty"`
	User          string                 `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Group         string                 `protobuf:"bytes,6,opt,name=group,proto3" json:"group,omitempty"`
	CreatedAt     uint64                 `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	ModifiedAt    uint64                 `protobuf:"varint,8,opt,name=modifiedAt,proto3" json:"modifiedAt,omitempty"`
	AccessedAr    uint64                 `protobuf:"varint,9,opt,name=accessedAr,proto3" json:"accessedAr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirEntry) Reset() {
	*x = DirEntry{}
	mi := &file_nameserver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirEntry) ProtoMessage() {}

func (x *DirEntry) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirEntry.ProtoReflect.Descriptor instead.
func (*DirEntry) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{2}
}

func (x *DirEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DirEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DirEntry) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *DirEntry) GetPermissions() *Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *DirEntry) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DirEntry) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *DirEntry) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DirEntry) GetModifiedAt() uint64 {
	if x != nil {
		return x.ModifiedAt
	}
	return 0
}

func (x *DirEntry) GetAccessedAr() uint64 {
	if x != nil {
		return x.AccessedAr
	}
	return 0
}

type StatBlockInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Crc           uint32                 `protobuf:"varint,3,opt,name=crc,proto3" json:"crc,omitempty"`
	Sequence      uint64                 `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Length        uint32                 `protobuf:"varint,5,opt,name=length,proto3" json:"length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatBlockInfo) Reset() {
	*x = StatBlockInfo{}
	mi := &file_nameserver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatBlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatBlockInfo) ProtoMessage() {}

func (x *StatBlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatBlockInfo.ProtoReflect.Descriptor instead.
func (*StatBlockInfo) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{3}
}

func (x *StatBlockInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *StatBlockInfo) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *StatBlockInfo) GetCrc() uint32 {
	if x != nil {
		return x.Crc
	}
	return 0
}

func (x *StatBlockInfo) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *StatBlockInfo) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type CreateFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Permissions   *Permissions           `protobuf:"bytes,2,opt,name=permissions,proto3" json:"permissions,omitempty"`
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Group         string                 `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFileRequest) Reset() {
	*x = CreateFileRequest{}
	mi := &file_nameserver_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileRequest) ProtoMessage() {}

func (x *CreateFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileRequest.ProtoReflect.Descriptor instead.
func (*CreateFileRequest) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{4}
}

func (x *CreateFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateFileRequest) GetPermissions() *Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *CreateFileRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CreateFileRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type CreateFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFileResponse) Reset() {
	*x = CreateFileResponse{}
	mi := &file_nameserver_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileResponse) ProtoMessage() {}

func (x *CreateFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileResponse.ProtoReflect.Descriptor instead.
func (*CreateFileResponse) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{5}
}

func (x *CreateFileResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateDirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Permissions   *Permissions           `protobuf:"bytes,2,opt,name=permissions,proto3" json:"permissions,omitempty"`
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Group         string                 `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDirRequest) Reset() {
	*x = CreateDirRequest{}
	mi := &file_nameserver_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirRequest) ProtoMessage() {}

func (x *CreateDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirRequest.ProtoReflect.Descriptor instead.
func (*CreateDirRequest) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{6}
}

func (x *CreateDirRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateDirRequest) GetPermissions() *Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *CreateDirRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CreateDirRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type CreateDirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDirResponse) Reset() {
	*x = CreateDirResponse{}
	mi := &file_nameserver_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirResponse) ProtoMessage() {}

func (x *CreateDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirResponse.ProtoReflect.Descriptor instead.
func (*CreateDirResponse) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{7}
}

func (x *CreateDirResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_nameserver_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DeleteFileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	mi := &file_nameserver_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{9}
}

type DeleteDirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDirRequest) Reset() {
	*x = DeleteDirRequest{}
	mi := &file_nameserver_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDirRequest) ProtoMessage() {}

func (x *DeleteDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDirRequest.ProtoReflect.Descriptor instead.
func (*DeleteDirRequest) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteDirRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DeleteDirRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteDirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDirResponse) Reset() {
	*x = DeleteDirResponse{}
	mi := &file_nameserver_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDirResponse) ProtoMessage() {}

func (x *DeleteDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDirResponse.ProtoReflect.Descriptor instead.
func (*DeleteDirResponse) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{11}
}

type ListDirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirRequest) Reset() {
	*x = ListDirRequest{}
	mi := &file_nameserver_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirRequest) ProtoMessage() {}

func (x *ListDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirRequest.ProtoReflect.Descriptor instead.
func (*ListDirRequest) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{12}
}

func (x *ListDirRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListDirRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListDirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Entries       []*DirEntry            `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirResponse) Reset() {
	*x = ListDirResponse{}
	mi := &file_nameserver_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirResponse) ProtoMessage() {}

func (x *ListDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirResponse.ProtoReflect.Descriptor instead.
func (*ListDirResponse) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{13}
}

func (x *ListDirResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListDirResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListDirResponse) GetEntries() []*DirEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type StatFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatFileRequest) Reset() {
	*x = StatFileRequest{}
	mi := &file_nameserver_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatFileRequest) ProtoMessage() {}

func (x *StatFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatFileRequest.ProtoReflect.Descriptor instead.
func (*StatFileRequest) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{14}
}

func (x *StatFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StatFileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StatFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Entry         *DirEntry              `protobuf:"bytes,3,opt,name=entry,proto3" json:"entry,omitempty"`
	BlockInfos    []*StatBlockInfo       `protobuf:"bytes,4,rep,name=blockInfos,proto3" json:"blockInfos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatFileResponse) Reset() {
	*x = StatFileResponse{}
	mi := &file_nameserver_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatFileResponse) ProtoMessage() {}

func (x *StatFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatFileResponse.ProtoReflect.Descriptor instead.
func (*StatFileResponse) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{15}
}

func (x *StatFileResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StatFileResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StatFileResponse) GetEntry() *DirEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *StatFileResponse) GetBlockInfos() []*StatBlockInfo {
	if x != nil {
		return x.BlockInfos
	}
	return nil
}

type OpenFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenFileRequest) Reset() {
	*x = OpenFileRequest{}
	mi := &file_nameserver_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenFileRequest) ProtoMessage() {}

func (x *OpenFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenFileRequest.ProtoReflect.Descriptor instead.
func (*OpenFileRequest) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{16}
}

func (x *OpenFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OpenFileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OpenFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Handle        string                 `protobuf:"bytes,3,opt,name=handle,proto3" json:"handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenFileResponse) Reset() {
	*x = OpenFileResponse{}
	mi := &file_nameserver_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenFileResponse) ProtoMessage() {}

func (x *OpenFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenFileResponse.ProtoReflect.Descriptor instead.
func (*OpenFileResponse) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{17}
}

func (x *OpenFileResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OpenFileResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OpenFileResponse) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

type CloseFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Handle        string                 `protobuf:"bytes,3,opt,name=handle,proto3" json:"handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseFileRequest) Reset() {
	*x = CloseFileRequest{}
	mi := &file_nameserver_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseFileRequest) ProtoMessage() {}

func (x *CloseFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseFileRequest.ProtoReflect.Descriptor instead.
func (*CloseFileRequest) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{18}
}

func (x *CloseFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CloseFileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloseFileRequest) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

type CloseFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseFileResponse) Reset() {
	*x = CloseFileResponse{}
	mi := &file_nameserver_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseFileResponse) ProtoMessage() {}

func (x *CloseFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseFileResponse.ProtoReflect.Descriptor instead.
func (*CloseFileResponse) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{19}
}

func (x *CloseFileResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CloseFileResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PrepareWriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Handle        string                 `protobuf:"bytes,3,opt,name=handle,proto3" json:"handle,omitempty"`
	Sequence      uint64                 `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Location      string                 `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareWriteRequest) Reset() {
	*x = PrepareWriteRequest{}
	mi := &file_nameserver_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareWriteRequest) ProtoMessage() {}

func (x *PrepareWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareWriteRequest.ProtoReflect.Descriptor instead.
func (*PrepareWriteRequest) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{20}
}

func (x *PrepareWriteRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PrepareWriteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PrepareWriteRequest) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *PrepareWriteRequest) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PrepareWriteRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type PrepareWriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Handle        string                 `protobuf:"bytes,3,opt,name=handle,proto3" json:"handle,omitempty"`
	Sequence      uint64                 `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Primary       string                 `protobuf:"bytes,5,opt,name=primary,proto3" json:"primary,omitempty"`
	Others        []string               `protobuf:"bytes,6,rep,name=others,proto3" json:"others,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareWriteResponse) Reset() {
	*x = PrepareWriteResponse{}
	mi := &file_nameserver_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareWriteResponse) ProtoMessage() {}

func (x *PrepareWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nameserver_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareWriteResponse.ProtoReflect.Descriptor instead.
func (*PrepareWriteResponse) Descriptor() ([]byte, []int) {
	return file_nameserver_proto_rawDescGZIP(), []int{21}
}

func (x *PrepareWriteResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PrepareWriteResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PrepareWriteResponse) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *PrepareWriteResponse) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PrepareWriteResponse) GetPrimary() string {
	if x != nil {
		return x.Primary
	}
	return ""
}

func (x *PrepareWriteResponse) GetOthers() []string {
	if x != nil {
		return x.Others
	}
	return nil
}

var File_nameserver_proto protoreflect.FileDescriptor

const file_nameserver_proto_rawDesc = "" +
	"\n" +
	"\x10nameserver.proto\x12\n" +
	"nameserver\"P\n" +
	"\n" +
	"Permission\x12\x18\n" +
	"\aexecute\x18\x01 \x01(\bR\aexecute\x12\x12\n" +
	"\x04read\x18\x02 \x01(\bR\x04read\x12\x14\n" +
	"\x05write\x18\x03 \x01(\bR\x05write\"\x97\x01\n" +
	"\vPermissions\x12,\n" +
	"\x05owner\x18\x01 \x01(\v2\x16.nameserver.PermissionR\x05owner\x12,\n" +
	"\x05group\x18\x02 \x01(\v2\x16.nameserver.PermissionR\x05group\x12,\n" +
	"\x05other\x18\x03 \x01(\v2\x16.nameserver.PermissionR\x05other\"\x87\x02\n" +
	"\bDirEntry\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x14\n" +
	"\x05isDir\x18\x03 \x01(\bR\x05isDir\x129\n" +
	"\vpermissions\x18\x04 \x01(\v2\x17.nameserver.PermissionsR\vpermissions\x12\x12\n" +
	"\x04user\x18\x05 \x01(\tR\x04user\x12\x14\n" +
	"\x05group\x18\x06 \x01(\tR\x05group\x12\x1c\n" +
	"\tcreatedAt\x18\a \x01(\x04R\tcreatedAt\x12\x1e\n" +
	"\n" +
	"modifiedAt\x18\b \x01(\x04R\n" +
	"modifiedAt\x12\x1e\n" +
	"\n" +
	"accessedAr\x18\t \x01(\x04R\n" +
	"accessedAr\"\x83\x01\n" +
	"\rStatBlockInfo\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x18\n" +
	"\ablockId\x18\x02 \x01(\tR\ablockId\x12\x10\n" +
	"\x03crc\x18\x03 \x01(\rR\x03crc\x12\x1a\n" +
	"\bsequence\x18\x04 \x01(\x04R\bsequence\x12\x16\n" +
	"\x06length\x18\x05 \x01(\rR\x06length\"\x8c\x01\n" +
	"\x11CreateFileRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x129\n" +
	"\vpermissions\x18\x02 \x01(\v2\x17.nameserver.PermissionsR\vpermissions\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x14\n" +
	"\x05group\x18\x04 \x01(\tR\x05group\"$\n" +
	"\x12CreateFileResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x8b\x01\n" +
	"\x10CreateDirRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x129\n" +
	"\vpermissions\x18\x02 \x01(\v2\x17.nameserver.PermissionsR\vpermissions\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x14\n" +
	"\x05group\x18\x04 \x01(\tR\x05group\"#\n" +
	"\x11CreateDirResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"7\n" +
	"\x11DeleteFileRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x14\n" +
	"\x12DeleteFileResponse\"6\n" +
	"\x10DeleteDirRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x13\n" +
	"\x11DeleteDirResponse\"4\n" +
	"\x0eListDirRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"e\n" +
	"\x0fListDirResponse\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12.\n" +
	"\aentries\x18\x03 \x03(\v2\x14.nameserver.DirEntryR\aentries\"5\n" +
	"\x0fStatFileRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x9d\x01\n" +
	"\x10StatFileResponse\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12*\n" +
	"\x05entry\x18\x03 \x01(\v2\x14.nameserver.DirEntryR\x05entry\x129\n" +
	"\n" +
	"blockInfos\x18\x04 \x03(\v2\x19.nameserver.StatBlockInfoR\n" +
	"blockInfos\"5\n" +
	"\x0fOpenFileRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"N\n" +
	"\x10OpenFileResponse\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x16\n" +
	"\x06handle\x18\x03 \x01(\tR\x06handle\"N\n" +
	"\x10CloseFileRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x16\n" +
	"\x06handle\x18\x03 \x01(\tR\x06handle\"7\n" +
	"\x11CloseFileResponse\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x89\x01\n" +
	"\x13PrepareWriteRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x16\n" +
	"\x06handle\x18\x03 \x01(\tR\x06handle\x12\x1a\n" +
	"\bsequence\x18\x04 \x01(\x04R\bsequence\x12\x1a\n" +
	"\blocation\x18\x05 \x01(\tR\blocation\"\xa0\x01\n" +
	"\x14PrepareWriteResponse\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x16\n" +
	"\x06handle\x18\x03 \x01(\tR\x06handle\x12\x1a\n" +
	"\bsequence\x18\x04 \x01(\x04R\bsequence\x12\x18\n" +
	"\aprimary\x18\x05 \x01(\tR\aprimary\x12\x16\n" +
	"\x06others\x18\x06 \x03(\tR\x06others2\xa9\x05\n" +
	"\n" +
	"NameServer\x12K\n" +
	"\n" +
	"CreateFile\x12\x1d.nameserver.CreateFileRequest\x1a\x1e.nameserver.CreateFileResponse\x12H\n" +
	"\tCreateDir\x12\x1c.nameserver.CreateDirRequest\x1a\x1d.nameserver.CreateDirResponse\x12K\n" +
	"\n" +
	"DeleteFile\x12\x1d.nameserver.DeleteFileRequest\x1a\x1e.nameserver.DeleteFileResponse\x12H\n" +
	"\tDeleteDir\x12\x1c.nameserver.DeleteDirRequest\x1a\x1d.nameserver.DeleteDirResponse\x12B\n" +
	"\aListDir\x12\x1a.nameserver.ListDirRequest\x1a\x1b.nameserver.ListDirResponse\x12E\n" +
	"\bStatFile\x12\x1b.nameserver.StatFileRequest\x1a\x1c.nameserver.StatFileResponse\x12E\n" +
	"\bOpenFile\x12\x1b.nameserver.OpenFileRequest\x1a\x1c.nameserver.OpenFileResponse\x12H\n" +
	"\tCloseFile\x12\x1c.nameserver.CloseFileRequest\x1a\x1d.nameserver.CloseFileResponse\x12Q\n" +
	"\fPrepareWrite\x12\x1f.nameserver.PrepareWriteRequest\x1a .nameserver.PrepareWriteResponseB\n" +
	"Z\b./;protob\x06proto3"

var (
	file_nameserver_proto_rawDescOnce sync.Once
	file_nameserver_proto_rawDescData []byte
)

func file_nameserver_proto_rawDescGZIP() []byte {
	file_nameserver_proto_rawDescOnce.Do(func() {
		file_nameserver_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nameserver_proto_rawDesc), len(file_nameserver_proto_rawDesc)))
	})
	return file_nameserver_proto_rawDescData
}

var file_nameserver_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_nameserver_proto_goTypes = []any{
	(*Permission)(nil),           // 0: nameserver.Permission
	(*Permissions)(nil),          // 1: nameserver.Permissions
	(*DirEntry)(nil),             // 2: nameserver.DirEntry
	(*StatBlockInfo)(nil),        // 3: nameserver.StatBlockInfo
	(*CreateFileRequest)(nil),    // 4: nameserver.CreateFileRequest
	(*CreateFileResponse)(nil),   // 5: nameserver.CreateFileResponse
	(*CreateDirRequest)(nil),     // 6: nameserver.CreateDirRequest
	(*CreateDirResponse)(nil),    // 7: nameserver.CreateDirResponse
	(*DeleteFileRequest)(nil),    // 8: nameserver.DeleteFileRequest
	(*DeleteFileResponse)(nil),   // 9: nameserver.DeleteFileResponse
	(*DeleteDirRequest)(nil),     // 10: nameserver.DeleteDirRequest
	(*DeleteDirResponse)(nil),    // 11: nameserver.DeleteDirResponse
	(*ListDirRequest)(nil),       // 12: nameserver.ListDirRequest
	(*ListDirResponse)(nil),      // 13: nameserver.ListDirResponse
	(*StatFileRequest)(nil),      // 14: nameserver.StatFileRequest
	(*StatFileResponse)(nil),     // 15: nameserver.StatFileResponse
	(*OpenFileRequest)(nil),      // 16: nameserver.OpenFileRequest
	(*OpenFileResponse)(nil),     // 17: nameserver.OpenFileResponse
	(*CloseFileRequest)(nil),     // 18: nameserver.CloseFileRequest
	(*CloseFileResponse)(nil),    // 19: nameserver.CloseFileResponse
	(*PrepareWriteRequest)(nil),  // 20: nameserver.PrepareWriteRequest
	(*PrepareWriteResponse)(nil), // 21: nameserver.PrepareWriteResponse
}
var file_nameserver_proto_depIdxs = []int32{
	0,  // 0: nameserver.Permissions.owner:type_name -> nameserver.Permission
	0,  // 1: nameserver.Permissions.group:type_name -> nameserver.Permission
	0,  // 2: nameserver.Permissions.other:type_name -> nameserver.Permission
	1,  // 3: nameserver.DirEntry.permissions:type_name -> nameserver.Permissions
	1,  // 4: nameserver.CreateFileRequest.permissions:type_name -> nameserver.Permissions
	1,  // 5: nameserver.CreateDirRequest.permissions:type_name -> nameserver.Permissions
	2,  // 6: nameserver.ListDirResponse.entries:type_name -> nameserver.DirEntry
	2,  // 7: nameserver.StatFileResponse.entry:type_name -> nameserver.DirEntry
	3,  // 8: nameserver.StatFileResponse.blockInfos:type_name -> nameserver.StatBlockInfo
	4,  // 9: nameserver.NameServer.CreateFile:input_type -> nameserver.CreateFileRequest
	6,  // 10: nameserver.NameServer.CreateDir:input_type -> nameserver.CreateDirRequest
	8,  // 11: nameserver.NameServer.DeleteFile:input_type -> nameserver.DeleteFileRequest
	10, // 12: nameserver.NameServer.DeleteDir:input_type -> nameserver.DeleteDirRequest
	12, // 13: nameserver.NameServer.ListDir:input_type -> nameserver.ListDirRequest
	14, // 14: nameserver.NameServer.StatFile:input_type -> nameserver.StatFileRequest
	16, // 15: nameserver.NameServer.OpenFile:input_type -> nameserver.OpenFileRequest
	18, // 16: nameserver.NameServer.CloseFile:input_type -> nameserver.CloseFileRequest
	20, // 17: nameserver.NameServer.PrepareWrite:input_type -> nameserver.PrepareWriteRequest
	5,  // 18: nameserver.NameServer.CreateFile:output_type -> nameserver.CreateFileResponse
	7,  // 19: nameserver.NameServer.CreateDir:output_type -> nameserver.CreateDirResponse
	9,  // 20: nameserver.NameServer.DeleteFile:output_type -> nameserver.DeleteFileResponse
	11, // 21: nameserver.NameServer.DeleteDir:output_type -> nameserver.DeleteDirResponse
	13, // 22: nameserver.NameServer.ListDir:output_type -> nameserver.ListDirResponse
	15, // 23: nameserver.NameServer.StatFile:output_type -> nameserver.StatFileResponse
	17, // 24: nameserver.NameServer.OpenFile:output_type -> nameserver.OpenFileResponse
	19, // 25: nameserver.NameServer.CloseFile:output_type -> nameserver.CloseFileResponse
	21, // 26: nameserver.NameServer.PrepareWrite:output_type -> nameserver.PrepareWriteResponse
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_nameserver_proto_init() }
func file_nameserver_proto_init() {
	if File_nameserver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nameserver_proto_rawDesc), len(file_nameserver_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nameserver_proto_goTypes,
		DependencyIndexes: file_nameserver_proto_depIdxs,
		MessageInfos:      file_nameserver_proto_msgTypes,
	}.Build()
	File_nameserver_proto = out.File
	file_nameserver_proto_goTypes = nil
	file_nameserver_proto_depIdxs = nil
}
