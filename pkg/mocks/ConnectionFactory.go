// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	grpc "google.golang.org/grpc"
)

// ConnectionFactory is an autogenerated mock type for the ConnectionFactory type
type ConnectionFactory struct {
	mock.Mock
}

type ConnectionFactory_Expecter struct {
	mock *mock.Mock
}

func (_m *ConnectionFactory) EXPECT() *ConnectionFactory_Expecter {
	return &ConnectionFactory_Expecter{mock: &_m.Mock}
}

// CreateConnection provides a mock function with given fields: target
func (_m *ConnectionFactory) CreateConnection(target string) (*grpc.ClientConn, error) {
	ret := _m.Called(target)

	if len(ret) == 0 {
		panic("no return value specified for CreateConnection")
	}

	var r0 *grpc.ClientConn
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*grpc.ClientConn, error)); ok {
		return rf(target)
	}
	if rf, ok := ret.Get(0).(func(string) *grpc.ClientConn); ok {
		r0 = rf(target)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*grpc.ClientConn)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(target)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ConnectionFactory_CreateConnection_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateConnection'
type ConnectionFactory_CreateConnection_Call struct {
	*mock.Call
}

// CreateConnection is a helper method to define mock.On call
//   - target string
func (_e *ConnectionFactory_Expecter) CreateConnection(target interface{}) *ConnectionFactory_CreateConnection_Call {
	return &ConnectionFactory_CreateConnection_Call{Call: _e.mock.On("CreateConnection", target)}
}

func (_c *ConnectionFactory_CreateConnection_Call) Run(run func(target string)) *ConnectionFactory_CreateConnection_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *ConnectionFactory_CreateConnection_Call) Return(_a0 *grpc.ClientConn, _a1 error) *ConnectionFactory_CreateConnection_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ConnectionFactory_CreateConnection_Call) RunAndReturn(run func(string) (*grpc.ClientConn, error)) *ConnectionFactory_CreateConnection_Call {
	_c.Call.Return(run)
	return _c
}

// NewConnectionFactory creates a new instance of ConnectionFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConnectionFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConnectionFactory {
	mock := &ConnectionFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
